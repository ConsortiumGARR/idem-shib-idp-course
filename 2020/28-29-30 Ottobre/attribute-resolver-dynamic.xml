<?xml version="1.0" encoding="UTF-8"?>

<AttributeResolver
        xmlns="urn:mace:shibboleth:2.0:resolver"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="urn:mace:shibboleth:2.0:resolver http://shibboleth.net/schema/idp/shibboleth-attribute-resolver.xsd">

    <!-- ========================================== -->
    <!--      Attribute Definitions                 -->
    <!-- ========================================== -->

    <!-- TEMPLATE: Restituire un displayName personalizzato sulla base di nome e cognome -->
    <AttributeDefinition xsi:type="Template" id="displayName">
        <InputDataConnector ref="myLDAP" attributeNames="sn givenName" />
        <Template>
            <![CDATA[
                ${sn} ${givenName}
            ]]>
        </Template>
    </AttributeDefinition>

    <!-- MAPPED: Assegnare un'affiliazione ai diversi utenti dell'istituzione -->
    <AttributeDefinition id="eduPersonAffiliation" xsi:type="Mapped">
        <InputDataConnector ref="myLDAP" attributeNames="title" />
        <DefaultValue passThru="true">affiliate</DefaultValue>
        <ValueMap>
            <ReturnValue>student</ReturnValue>
            <SourceValue>studente</SourceValue>
            <SourceValue>dottorando</SourceValue>
        </ValueMap>
        <ValueMap>
            <ReturnValue>member</ReturnValue>
            <SourceValue>studente</SourceValue>
            <SourceValue>dottorando</SourceValue>
        </ValueMap>
        <ValueMap>
            <ReturnValue>affiliate</ReturnValue>
            <SourceValue>ospite</SourceValue>
        </ValueMap>
        <ValueMap>
            <ReturnValue>staff</ReturnValue>
            <SourceValue>dottorando</SourceValue>
        </ValueMap>
        <ValueMap>
            <ReturnValue>staff</ReturnValue>
            <SourceValue>dirigente</SourceValue>
        </ValueMap>
        <ValueMap>
            <ReturnValue>some_string_to_add_before_value:$1</ReturnValue>
            <SourceValue>(.+)</SourceValue>
        </ValueMap>
    </AttributeDefinition>

    <!-- SCRIPTED: Aggiungere un valore a eduPersonEntitlement per tutti gli affiliati di tipo 'staff' -->
    <AttributeDefinition xsi:type="ScriptedAttribute" id="eduPersonEntitlement">
        <InputDataConnector ref="myLDAP" attributeNames="eduPersonEntitlement eduPersonAffiliation" />
        <Script>
           <![CDATA[
               logger = Java.type("org.slf4j.LoggerFactory").getLogger("net.shibboleth.idp.attribute.resolver.epebuilder");
               if (typeof eduPersonEntitlement == "undefined" || eduPersonEntitlement.getValues().size() < 1) {
                  logger.info("No ePE in LDAP found, creating one");
                  for (i = 0; i < eduPersonAffiliation.getValues().size(); i++){
                     affiliation = eduPersonAffiliation.getValues().get(i);
                     if (affiliation == 'staff') {
                        eduPersonEntitlement.addValue('urn:mace:dir:entitlement:common-lib-terms');
                     }
                  }
               } else {
                    logger.info("ePE has " + eduPersonEntitlement.getValues().size() + " values");
                    for (i = 0; i < eduPersonAffiliation.getValues().size(); i++){
                       affiliation = eduPersonAffiliation.getValues().get(i);
                       if (affiliation == 'staff') {
                          eduPersonEntitlement.addValue('urn:mace:dir:entitlement:common-lib-terms');
                       }
                    }
               }
               for (i = 0; i < eduPersonEntitlement.getValues().size(); i++){
                  logger.info("ePE value "+i+": " + eduPersonEntitlement.getValues().get(i));
               }
           ]]>
        </Script>
    </AttributeDefinition>

    <!-- SCRIPTED: Generare 'displayName' come valore preso da 'cn' (commonName) or givenName + sn (surname) con log -->
    <AttributeDefinition xsi:type="ScriptedAttribute" id="displayName">
        <InputDataConnector ref="myLDAP" attributeNames="displayName cn givenName sn" />
        <Script>
           <![CDATA[
             logger = Java.type("org.slf4j.LoggerFactory").getLogger("net.shibboleth.idp.attribute.resolver.displayNameBuilder");
             valueType =  Java.type("net.shibboleth.idp.attribute.StringAttributeValue");

             // This implementation composes the value of the attribute displayName
             // from the values of the attributes 'cn' or 'givenName' + 'sn'

             // check existance of commonName attribute and use it to generate displayName attribute
             if (cn != null && cn.getValues().size() > 0) {
                commonName = cn.getValues().get(0);
             } else {
                commonName = null;
             }

             // compose value from givenName and surname

             // check whether givenName and surname exist
             if (givenName != null && givenName.getValues().size() > 0) {
                gn = givenName.getValues().get(0);
             } else {
                gn = null;
             }
             if (sn != null && sn.getValues().size() > 0) {
                surname = sn.getValues().get(0);
             } else {
                surname = null;
             }

             if (typeof displayName == 'undefined' || displayName.getValues().size() < 1) {
                logger.info("No displayName in LDAP found, creating one");

                if (commonName != null) {
                   displayName.addValue(new valueType(commonName));
                   logger.info('displayName final value: ' + displayName.getValues().get(0));

                } else if (surname != null && gn != null) {
                   displayName.addValue(new valueType(gn + ' ' + surname));
                   logger.info('displayName final value: ' + displayName.getValues().get(0));

                } else if (surname != null) {
                   displayName.addValue(new valueType(surname));
                   logger.info('displayName final value: ' + displayName.getValues().get(0));

                } else if (gn != null) {
                   displayName.addValue(new valueType(gn));
                   logger.info('displayName final value: ' + displayName.getValues().get(0));
                }

             } else {
                logger.info('displayName had value: ' + displayName.getValues().get(0));
             }
            ]]>
        </Script>
    </AttributeDefinition>

    <!-- Scoped: Valorizzare un attributo come il risultato dell'unione di un attributo a uno scope -->
    <!-- idp.scope: è una proprietà valorizzata in idp.properties -->
    <AttributeDefinition scope="%{idp.scope}" xsi:type="Scoped" id="eduPersonScopedAffiliation">
        <InputDataConnector ref="myLDAP" attributeNames="eduPersonAffiliation" />
    </AttributeDefinition>

</AttributeResolver>
